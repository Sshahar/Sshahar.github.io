@use "variables";

@use 'sass:color';

/* Media queries Breakpoint mixins */

@mixin for-mobile-layout {
  @media (max-width: variables.$break-small) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: variables.$break-narrow) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: variables.$break-normal) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: variables.$break-wide) {
    @content;
  }
}

@mixin for-extra-wide-layout {
  @media (min-width: variables.$break-extra-wide) {
    @content;
  }
}

@mixin layoutGTC($max) {
  grid-template-columns:
    minmax(variables.$layoutPadding, 1fr)
    minmax(auto, $max)
    minmax(variables.$layoutPadding, 1fr);
}

/* Media  Mixins */

$mobile-width: 560px;
$tablet-width: 768px;
$desktop-width: 954px;

@mixin mobile {
  @media (max-width: #{$tablet-width - 1px}) {
    // @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

//aspect ratio mixin
@mixin aspect-ratio($width: 1, $height: 1) {
  position: relative;
  overflow: hidden;
  &:before {
    content: '';
    display: block;
    width: 100%;
    padding-top: calc(($height / $width) * 100%);
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  > img {
    height: 100%;
    object-fit: cover;
  }
}
